

tii_detection always was found to be a problem. In fact it is
trivial to solve, but due to an error in a generating program
I missed that.

The way tii is encoded is simple, it is a 4 out of 8 code for the
mainId, and a 1 .. 23 offset for the subId.

The code maps by assigning bit values to the positions in the
8 bits. The first bit has a value of 0x80, the seconds 0x40 etc.

The 4/8 code is implemented in 8 0/1 values with corresponding indices
each in a segment of 24 values. So, an encoded value is represented
in the fft by 4 non-null values, appearing at a distance of N * 24
elements.

Note 1:
	null value not to be taken to litterally, there is noise
Note 2:
	elements consists of two subsequent bins (carriers) in the fft

The offset indicates the position in the 24 value segments, and is
- obviously - the same for all four high values in the set of 8 values.

Decoding is then straight forward, it is restricted to DAB Mode 1.

The carriers, -768 .. 768, are collapsed onto a vector of 192 (8 * 24)
length. The transmitted pattern is repeated, it occurs 4 times,
and each offset value takes 2 carriers.

After collapsing, the 192 value vector is considered to consist
of 6 segments of 24 values. 
A search is made in these 8 segments to locate the elements with the highest
(or high-enough) values, and the number of times these elements
are detected is maintained in a separate 24 bit element vector.

The sum of the high values determines the offset, the pattern seen
in the corresponding elements in the 8 24 value segments determine
a pattern.

The "value" of the pattern - bit encoded as stated above -
is used in an index table to locate the corresponding 'P' value


============================================================================

What was I doing wrong:

Using a simple generator I had the - erroneous - impression that
the pattern that could occur were NOT unique. Apparently an error
in my generator. By the search to patters starting and stopping with 
a "1", patterns were not unique, of course by looking at the patters
consisting of the full 8 0/1 values they are unique.

Assuming the pattern were NOT unique, a search had to be
made to allowable patterns for each starting position in the
transmitted null period.


